@model LaneBids.Models.AdminMaintenance
@using System.Activities.Expressions
@using System.Data
@using System.Web.UI.WebControls
@using LaneBids.Models
@{
    ViewBag.Title = "Maintenance";
    //Bid Types
    var gridBidType = new WebGrid(Model.BidTypesList, canPage: true, rowsPerPage: 20,
        selectionFieldName: "selectedBidTypeRow", ajaxUpdateContainerId: "gridBidtypeContent");
    gridBidType.Pager(WebGridPagerModes.NextPrevious);
    //Bid Status
    var gridBidStatus = new WebGrid(Model.BidStatusList, canPage: true, rowsPerPage: 20,
        selectionFieldName: "selectedBidStatusRow", ajaxUpdateContainerId: "gridBidStatusContent");
    gridBidStatus.Pager(WebGridPagerModes.NextPrevious);
    //Job Types
    var gridJobTypes = new WebGrid(Model.JobTypesList, canPage: true, rowsPerPage: 20,
        selectionFieldName: "selectedJobTypesRow", ajaxUpdateContainerId: "gridJobTypesContent");
    gridJobTypes.Pager(WebGridPagerModes.NextPrevious);
    //Scope Types
    var gridScopeTypes = new WebGrid(Model.ScopeTypesList, canPage: true, rowsPerPage: 20,
        selectionFieldName: "selectedScopeTypesRow", ajaxUpdateContainerId: "gridScopeTypesContent");
    gridScopeTypes.Pager(WebGridPagerModes.NextPrevious);
    //Bio Types
    var gridStructureTypes = new WebGrid(Model.StructureTypeList, canPage: true, rowsPerPage: 20,
        selectionFieldName: "selectedStructureTypesRow", ajaxUpdateContainerId: "gridStructureTypesContent");
    gridStructureTypes.Pager(WebGridPagerModes.NextPrevious);
    //Column Types
    var gridColumnTypes = new WebGrid(Model.ColumnTypesList, canPage: true, rowsPerPage: 20,
        selectionFieldName: "selectedColumnTypesRow", ajaxUpdateContainerId: "gridColumnTypesContent");
    gridColumnTypes.Pager(WebGridPagerModes.NextPrevious);
    //Column Shapes
    var gridColumnShapes = new WebGrid(Model.ColumnShapesList, canPage: true, rowsPerPage: 20,
        selectionFieldName: "selectedColumnShapesRow", ajaxUpdateContainerId: "gridColumnShapesContent");
    gridColumnShapes.Pager(WebGridPagerModes.NextPrevious);
    //Deck Styles
    var gridDeckStyles = new WebGrid(Model.DeckStylesList, canPage: true, rowsPerPage: 20,
        selectionFieldName: "selectedDeckStypesRow", ajaxUpdateContainerId: "gridDeckStyhpesContent");
    gridDeckStyles.Pager(WebGridPagerModes.NextPrevious);
    //Fascia Types
    var gridFasciaTypes = new WebGrid(Model.FasciaTypesList, canPage: true, rowsPerPage: 20,
        selectionFieldName: "selectedFasciaTyepsRow", ajaxUpdateContainerId: "gridFasciaTypesContent");
    gridFasciaTypes.Pager(WebGridPagerModes.NextPrevious);
    //Drainage Types
    var gridDrainage = new WebGrid(Model.DrainageList, canPage: true, rowsPerPage: 20,
        selectionFieldName: "selectedDrainageRow", ajaxUpdateContainerId: "gridDrainageContent");
    gridFasciaTypes.Pager(WebGridPagerModes.NextPrevious);
}

<h2>Maintenance Page</h2>
<!-- Structure Types -->
<div id="StructureType">
    <h3>Structure Types</h3>
    @gridStructureTypes.GetHtml(tableStyle: "webGrid",
        headerStyle: "header",
        alternatingRowStyle: "alt",
        selectedRowStyle: "select",
        columns: gridStructureTypes.Columns(
            gridStructureTypes.Column("Structure_Type_ID", "ID"),
            gridStructureTypes.Column("Name", " Name"),
            gridStructureTypes.Column("Create_Date", "Date Created"),
            gridStructureTypes.Column("FullName", "Created By"),
            gridStructureTypes.Column("Edit", header: null, format: @<text>@item.GetSelectLink("Edit")</text>)
                                                            ))
    <span class="AddNewLink" onclick="AddStructureType()">Add New</span>
    <div id="StructureTypeUpdate">
        @if (gridStructureTypes.HasSelection)
        {
            var structureType = gridStructureTypes.SelectedRow;
                @Html.Partial("_StructureTypes", new ViewDataDictionary(ViewData)
            {
                { "StructureTypeId", structureType["Structure_Type_ID"].ToString() },
                { "Name", structureType["Name"] }
            })
        }
    </div>
    <div id="BidTypeNew" style="display: none">
        @Html.Partial("_StructureTypes")
    </div>
</div>

<!-- Bid Status -->
<div id="BidStatus">
    <h3>Bid Statuses</h3>
    @gridBidStatus.GetHtml(tableStyle: "webGrid",
        headerStyle: "header",
        alternatingRowStyle: "alt",
        selectedRowStyle: "select",
        columns: gridBidStatus.Columns(
            gridBidStatus.Column("Bid_Status_ID", "ID"),
            gridBidStatus.Column("Status", "Status"),
            gridBidStatus.Column("Create_Date", "Date Created"),
            gridBidStatus.Column("FullName", "Created By"),
            gridBidStatus.Column("Edit", header: null, format: @<text>@item.GetSelectLink("Edit")</text>)))
    <span class="AddNewLink" onclick="AddBidStatus()">Add New</span>
    <div id="BidStatusUpdate">
        @if (gridBidStatus.HasSelection)
        {
            var bidStatus = gridBidStatus.SelectedRow;
                @Html.Partial("_BidStatus", new ViewDataDictionary(ViewData)
            {
                { "BidStatus", bidStatus["Bid_Status_ID"].ToString() },
                { "Name", bidStatus["Status"]}
            })
        }
    </div>
    <div id="BidStatusNew" style="display: none">
        @Html.Partial("_BidStatus")
    </div>
</div>

<!-- Job Types -->
<div id="JobType">
    <h3>Job Types</h3>
    @gridJobTypes.GetHtml(tableStyle: "webGrid",
            headerStyle: "header",
            alternatingRowStyle: "alt",
            selectedRowStyle: "select",
            columns: gridJobTypes.Columns(
            gridJobTypes.Column("Job_Type_ID", "ID"),
            gridJobTypes.Column("Name", "Name"),
            gridJobTypes.Column("Code", "Code"),
            gridJobTypes.Column("Create_Date", "Date Created"),
            gridJobTypes.Column("FullName", "Created By"),
            gridJobTypes.Column("Edit", header: null, format: @<text>@item.GetSelectLink("Edit")</text>)))
    <span class="AddNewLink" onclick="AddJobTypes()">Add New</span>
    <div id="JobTypeUpdate">
        @if (gridJobTypes.HasSelection)
        {
            var jobTypes = gridJobTypes.SelectedRow;
                @Html.Partial("_JobTypes", new ViewDataDictionary(ViewData)
            {
                { "JobTypeId", jobTypes["Job_Type_ID"].ToString() },
                { "Name", jobTypes["Name"]},
                { "Code", jobTypes["Code"]}
            })
        }
    </div>
    <div id="JobTypeNew" style="display: none">
        @Html.Partial("_JobTypes")
    </div>
</div>

<!--Scope Types -->
<div id="ScopeType">
    <h3>Scope Types</h3>
    @gridScopeTypes.GetHtml(tableStyle: "webGrid",
            headerStyle: "header",
            alternatingRowStyle: "alt",
            selectedRowStyle: "select",
            columns: gridScopeTypes.Columns(
            gridScopeTypes.Column("Scope_Type_ID", "ID"),
            gridScopeTypes.Column("Name", "Name"),
            gridScopeTypes.Column("Code", "Code"),
            gridScopeTypes.Column("Create_Date", "Date Created"),
            gridScopeTypes.Column("FullName", "Created By"),
            gridScopeTypes.Column("Edit", header: null, format: @<text>@item.GetSelectLink("Edit")</text>)))
    <span class="AddNewLink" onclick="AddScopeTypes()">Add New</span>
    <div id="ScopeTypeUpdate">
        @if (gridScopeTypes.HasSelection)
        {
            var scopeTypes = gridScopeTypes.SelectedRow;
            @Html.Partial("_ScopeTypes", new ViewDataDictionary(ViewData)
            {
                { "ScopeTypeId", scopeTypes["Scope_Type_ID"].ToString() },
                { "Name", scopeTypes["Name"]},
                { "Code", scopeTypes["Code"]}
            })
        }
    </div>
    <div id="ScopeTypeNew" style="display: none">
        @Html.Partial("_ScopeTypes")
    </div>
</div>

<!--Bid Types -->
<div id="BioType">
    <h3>Bid Types</h3>
    @gridBidType.GetHtml(tableStyle: "webGrid",
            headerStyle: "header",
            alternatingRowStyle: "alt",
            selectedRowStyle: "select",
            columns: gridBidType.Columns(
            gridBidType.Column("Bid_Type_ID", "ID"),
            gridBidType.Column("Name", "Name"),
            gridBidType.Column("Code", "Code"),
            gridBidType.Column("Create_Date", "Date Created"),
            gridBidType.Column("FullName", "Created By"),
            gridBidType.Column("Edit", header: null, format: @<text>@item.GetSelectLink("Edit")</text>)))
    <span class="AddNewLink" onclick="AddBidTypes()">Add New</span>
    <div id="BidTypeUpdate">
        @if (gridBidType.HasSelection)
        {
            var BioTypes = gridBidType.SelectedRow;
            @Html.Partial("_BidTypes", new ViewDataDictionary(ViewData)
            {
                { "BidTypeId", BioTypes["Bid_Type_ID"].ToString() },
                { "Name", BioTypes["Name"]},
                { "Code", BioTypes["Code"]}
            })
        }
    </div>
    <div id="BidTypeNew" style="display: none">
        @Html.Partial("_BidTypes")
    </div>
</div>

<!--Column Types -->
<div id="ColumnTypes">
    <h3>Column Types</h3>
    @gridColumnTypes.GetHtml(tableStyle: "webGrid",
            headerStyle: "header",
            alternatingRowStyle: "alt",
            selectedRowStyle: "select",
            columns: gridColumnTypes.Columns(
            gridColumnTypes.Column("Column_Type_ID", "ID"),
            gridColumnTypes.Column("Name", "Name"),
            gridColumnTypes.Column("Create_Date", "Date Created"),
            gridColumnTypes.Column("FullName", "Created By"),
            gridColumnTypes.Column("Edit", header: null, format: @<text>@item.GetSelectLink("Edit")</text>)))
    <span class="AddNewLink" onclick="AddColumnTypes()">Add New</span>
    <div id="ColumnTypeUpdate">
        @if (gridColumnTypes.HasSelection)
        {
            var ColumnTypes = gridColumnTypes.SelectedRow;
            @Html.Partial("_ColumnTypes", new ViewDataDictionary(ViewData)
            {
                { "ColumnTypeId", ColumnTypes["Column_Type_ID"].ToString() },
                { "Name", ColumnTypes["Name"]}
            })
        }
    </div>
    <div id="ColumnTypeNew" style="display: none">
        @Html.Partial("_ColumnTypes")
    </div>
</div>


<!--Column Shapes -->
<div id="ColumnShapes">
    <h3>Column Shapes</h3>
    @gridColumnShapes.GetHtml(tableStyle: "webGrid",
            headerStyle: "header",
            alternatingRowStyle: "alt",
            selectedRowStyle: "select",
            columns: gridColumnShapes.Columns(
            gridColumnShapes.Column("Column_Shape_ID", "ID"),
            gridColumnShapes.Column("Name", "Name"),
            gridColumnShapes.Column("Create_Date", "Date Created"),
            gridColumnShapes.Column("FullName", "Created By"),
            gridColumnShapes.Column("Edit", header: null, format: @<text>@item.GetSelectLink("Edit")</text>)))
    <span class="AddNewLink" onclick="AddColumnShapes()">Add New</span>
    <div id="ColumnShapesUpdate">
        @if (gridColumnShapes.HasSelection)
        {
            var ColumnShapes = gridColumnShapes.SelectedRow;
            @Html.Partial("_ColumnShapes", new ViewDataDictionary(ViewData)
            {
                { "ColumnShapesId", ColumnShapes["Column_Shape_ID"].ToString() },
                { "Name", ColumnShapes["Name"]}
            })
        }
    </div>
    <div id="ColumnShapesNew" style="display: none">
        @Html.Partial("_ColumnShapes")
    </div>
</div>

<!-- Deck Styles -->
<div id="DeckStyles">
    <h3>Deck Styles</h3>
    @gridDeckStyles.GetHtml(tableStyle: "webGrid",
            headerStyle: "header",
            alternatingRowStyle: "alt",
            selectedRowStyle: "select",
            columns: gridDeckStyles.Columns(
                gridDeckStyles.Column("Deck_Style_ID", "ID"),
                gridDeckStyles.Column("Name", "Name"),
                gridDeckStyles.Column("Create_Date", "Date Created"),
                gridDeckStyles.Column("FullName", "Created By"),
                gridDeckStyles.Column("Edit", header: null, format: @<text>@item.GetSelectLink("Edit")</text>)))
    <span class="AddNewLink" onclick="AddDeckStyles()">Add New</span>
    <div id="DeckStylesUpdate">
        @if (gridDeckStyles.HasSelection)
        {
            var DeckStyles = gridDeckStyles.SelectedRow;
            @Html.Partial("_DeckStyles", new ViewDataDictionary(ViewData)
            {
                { "DeckStylesId", DeckStyles["Deck_Style_ID"].ToString() },
                { "Name", DeckStyles["Name"]}
            })
        }
    </div>
    <div id="DeckStylesNew" style="display: none">
        @Html.Partial("_DeckStyles")
    </div>
</div>

<!-- Fascia Types -->
<div id="FasciaTypes">
    <h3>Fascia Types</h3>
    @gridFasciaTypes.GetHtml(tableStyle: "webGrid",
        headerStyle: "header",
        alternatingRowStyle: "alt",
        selectedRowStyle: "select",
        columns: gridFasciaTypes.Columns(
            gridFasciaTypes.Column("Fascia_Type_ID", "ID"),
            gridFasciaTypes.Column("Name", "Name"),
            gridFasciaTypes.Column("Create_Date", "Date Created"),
            gridFasciaTypes.Column("FullName", "Created By"),
            gridFasciaTypes.Column("Edit", header: null, format: @<text>@item.GetSelectLink("Edit")</text>)))
    <span onclick="AddFasciaTypes()" class="AddNewLink">Add New</span>
    <div id="FasciaTypesUpdate">
        @if (gridFasciaTypes.HasSelection)
        {
            var FasciaTypes = gridFasciaTypes.SelectedRow;
            @Html.Partial("_FasciaTypes", new ViewDataDictionary(ViewData)
            {
                { "FasciaTypesId", FasciaTypes["Fascia_Type_ID"].ToString() },
                { "Name", FasciaTypes["Name"]}
            })
        }
    </div>
    <div id="FasciaTypesNew" style="display: none">
        @Html.Partial("_FasciaTypes")
    </div>
</div>

<!-- Drainage -->
<div id="Drainage">
    <h3>Drainage</h3>
    @gridDrainage.GetHtml(tableStyle: "webGrid",
        headerStyle: "header",
        alternatingRowStyle: "alt",
        selectedRowStyle: "select",
        columns: gridFasciaTypes.Columns(
            gridFasciaTypes.Column("Drainage_Type_ID", "ID"),
            gridFasciaTypes.Column("Name", "Name"),
            gridFasciaTypes.Column("Create_Date", "Date Created"),
            gridFasciaTypes.Column("FullName", "Created By"),
            gridFasciaTypes.Column("Edit", header: null, format: @<text>@item.GetSelectLink("Edit")</text>)))
    <span onclick="AddDrainage()" class="AddNewLink">Add New</span>
    <div id="DrainageUpdate">
        @if (gridDrainage.HasSelection)
        {
            var drainage = gridDrainage.SelectedRow;
            @Html.Partial("_Drainage", new ViewDataDictionary(ViewData)
            {
                { "DrainageId", drainage["Drainage_Type_ID"].ToString() },
                { "Name", drainage["Name"]}
            })
        }
    </div>
    <div id="DrainageNew" style="display: none">
        @Html.Partial("_Drainage")
    </div>
</div>
<br /><br />
@section Scripts
{
    <script type="text/javascript">
        function AddBidType() {
            if ($("#BidTypeNew").is(":visible")) {
                $("#BidTypeUpdate").css("display", "none");
                $("#BidTypeNew").css("display", "none");
            } else {
                $("#BidTypeUpdate").css("display", "none");
                $("#BidTypeNew").css("display", "block");
            }
        }

        function AddBidStatus() {
            if ($("#BidStatusNew").is(":visible")) {
                $("#BidStatusUpdate").css("display", "none");
                $("#BidStatusNew").css("display", "none");
            } else {
                $("#BidStatusUpdate").css("display", "none");
                $("#BidStatusNew").css("display", "block");
            }
        }

        function AddJobTypes() {
            if ($("#JobTypeNew").is(":visible")) {
                $("#JobTypeUpdate").css("display", "none");
                $("#JobTypeNew").css("display", "none");
            } else {
                $("#JobTypeUpdate").css("display", "none");
                $("#JobTypeNew").css("display", "block");
            }
        }

        function AddScopeTypes() {
            if ($("#ScopeTypeNew").is(":visible")) {
                $("#ScopeTypeUpdate").css("display", "none");
                $("#ScopeTypeNew").css("display", "none");
            } else {
                $("#ScopeTypeUpdate").css("display", "none");
                $("#ScopeTypeNew").css("display", "block");
            }
        }

        function AddBioTypes() {
            if ($("#BioTypeNew").is(":visible")) {
                $("#BioTypeUpdate").css("display", "none");
                $("#BioTypeNew").css("display", "none");
            } else {
                $("#BioTypeUpdate").css("display", "none");
                $("#BioTypeNew").css("display", "block");
            }
        }

        function AddColumnTypes() {
            if ($("#ColumnTypeNew").is(":visible")) {
                $("#ColumnTypeUpdate").css("display", "none");
                $("#ColumnTypeNew").css("display", "none");
            } else {
                $("#ColumnTypeUpdate").css("display", "none");
                $("#ColumnTypeNew").css("display", "block");
            }
        }

        function AddColumnShapes() {
            if ($("#ColumnShapesNew").is(":visible")) {
                $("#ColumnShapesUpdate").css("display", "none");
                $("#ColumnShapesNew").css("display", "none");
            } else {
                $("#ColumnShapesUpdate").css("display", "none");
                $("#ColumnShapesNew").css("display", "block");
            }
        }

        function AddDeckStyles() {
            if ($("#DeckStylesNew").is(":visible")) {
                $("#DeckStylesUpdate").css("display", "none");
                $("#DeckStylesNew").css("display", "none");
            } else {
                $("#DeckStylesUpdate").css("display", "none");
                $("#DeckStylesNew").css("display", "block");
            }
        }

        function AddFasciaTypes() {
            if ($("#FasciaTypesNew").is(":visible")) {
                $("#FasciaTypesUpdate").css("display", "none");
                $("#FasciaTypesNew").css("display", "none");
            } else {
                $("#FasciaTypesUpdate").css("display", "none");
                $("#FasciaTypesNew").css("display", "block");
            }
        }

        function AddDrainage() {
            if ($("#DrainageNew").is(":visible")) {
                $("#DrainageNew").css("display", "none");
                $("#DrainageUpdate").css("display", "none");
            } else {
                $("#DrainageNew").css("display", "block");
                $("#DrainageUpdate").css("display", "none");
            }
        }
    </script>
}
