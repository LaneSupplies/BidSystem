@model LaneBids.Models.CustomerDetails

<div class="divPartial">
    <div class="label divLabelOnly"><label>Customer:</label></div>
    <div class="label divDropDown">
        @Html.ValidationSummary(true)
        @Html.DropDownListFor(model => model.CustomerId, Model.CustomerList)
        @Html.ValidationMessageFor(v => v.CustomerId, null, new { @class = "errorMessage" })
    </div>
    <div class="label divAddButton"><a href="#" id="AddCustomerLink" class="addImage"></a></div>
</div>

<div id="divAddCustomer" style="display: none" title="Add Customer">

    <div class="divLabel">
        <label>First Name</label>
        @Html.TextBoxFor(m => m.FirstName, new { @id = "CustomerFirstName" })
    </div>
    <div class="divLabel">
        <label>Last Name</label>
        @Html.TextBoxFor(m => m.LastName, new { @id = "CustomerLastName" })
    </div>
    <div class="divLabel">
        <label>Email</label>
        @Html.TextBoxFor(m => m.Email, new { @id = "CustomerEmail" })
    </div>
    <div class="divLabel">
        <label>Company Name</label>
        @Html.TextBoxFor(m => m.CompanyName, new { @id = "CustomerCompany" })
    </div>
    <div class="divLabel">
        <label>Address Line 1</label>
        @Html.TextBoxFor(m => m.Address.AddressLine1, new { @id = "CustomerAddress1" })
    </div>
    <div class="divLabel">
        <label>Address Line 2</label>
        @Html.TextBoxFor(m => m.Address.AddressLine2, new { @id = "CustomerAddress2" })
    </div>
    <div class="divLabel">
        <label>City</label>
        @Html.TextBoxFor(m => m.Address.City, new { @id = "CustomerCity" })
    </div>
    <div class="divLabel">
        <label>State</label>
        @Html.DropDownListFor(m => m.Address.State, Model.Address.StateList, new { @id = "CustomerState" })
    </div>
    <div class="divLabel">
        <label>Zip</label>
        @Html.TextBoxFor(m => m.Address.Zip, new { @id = "CustomerZip" })
    </div>
    <div class="divLabel">
        @Html.DropDownListFor(m => m.PhoneContacts.ContactId, Model.PhoneContacts.ContactTypeList, new { @id = "CustomerContactType" })
        @Html.TextBoxFor(m => m.PhoneContacts.PhoneNumber, new { @id = "CustomerContact" })
    </div>
    <input type="button" id="SubmitCustomer" name="SubmitCustomer" value="Submit" />

</div>

<script>
    $(document).ready(function() {
        var newOption = "<option value='None' selected > -- Select Customer --</option>";
        $("#CustomerId").append(newOption);
    });

    $("#AddCustomerLink").on("click", function() {
        $("#divAddCustomer").dialog({
            width: 500,
            height: 650
        });
    });

    $("#SubmitCustomer").on("click", function () {
        $.ajax({
            url: "/Home/CustomerAdd",
            type: "POST",
            dataType: "text",
            data: {
                FirstName: $("#CustomerFirstName").val(),
                LastName: $("#CustomerLastName").val(),
                Email: $("#CustomerEmail").val(),
                CompanyName: $("#CustomerCompany").val(),
                AddressLine1: $("#CustomerAddress1").val(),
                AddressLine2: $("#CustomerAddress2").val(),
                City: $("#CustomerCity").val(),
                State: $("#CustomerState").val(),
                Zip: $("#CustomerZip").val(),
                PhoneNumber: $("#CustomerContact").val(),
                ContactId: $("#CustomerContactType").val()
            }
        }).success(function (response) {
            //alert("Added Customer: " + response);
            var value = response.split('|');
            var newOption = "<option value='" + value[0] +"' selected >" + value[1] + "</option>";
            $("#CustomerId").append(newOption);
            $("#divAddCustomer").dialog("close");
        }).error(function (xhr, textStatus, errorThrown) {
            alert("Failure to add customer (Response: " + xhr.responseText + " | Status: " + textStatus + " | ErrorMessage: " + errorThrown + ")");
        });

    });
</script>