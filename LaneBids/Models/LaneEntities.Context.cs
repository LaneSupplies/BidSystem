//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LaneBids.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class LaneEntities : DbContext
    {
        public LaneEntities()
            : base("name=LaneEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Activity_Log> Activity_Log { get; set; }
        public DbSet<Address> Addresses { get; set; }
        public DbSet<Bid_Notes> Bid_Notes { get; set; }
        public DbSet<Bid_Statuses> Bid_Statuses { get; set; }
        public DbSet<Bid_Types> Bid_Types { get; set; }
        public DbSet<Bid> Bids { get; set; }
        public DbSet<Canopy> Canopies { get; set; }
        public DbSet<Color> Colors { get; set; }
        public DbSet<Column_Types> Column_Types { get; set; }
        public DbSet<Contact_Info> Contact_Info { get; set; }
        public DbSet<Contact_Types> Contact_Types { get; set; }
        public DbSet<Customer> Customers { get; set; }
        public DbSet<Deck_Styles> Deck_Styles { get; set; }
        public DbSet<Drainage_Types> Drainage_Types { get; set; }
        public DbSet<Fascia_Types> Fascia_Types { get; set; }
        public DbSet<Gutter_Types> Gutter_Types { get; set; }
        public DbSet<Image> Images { get; set; }
        public DbSet<Job_Types> Job_Types { get; set; }
        public DbSet<Measurement_Lists> Measurement_Lists { get; set; }
        public DbSet<Measurement> Measurements { get; set; }
        public DbSet<Sales_Persons> Sales_Persons { get; set; }
        public DbSet<Scope_Types> Scope_Types { get; set; }
        public DbSet<Shipping_Info> Shipping_Info { get; set; }
        public DbSet<Site> Sites { get; set; }
        public DbSet<Structure_Types> Structure_Types { get; set; }
        public DbSet<UserLoginProfiles> UserLoginProfiles { get; set; }
    
        public virtual ObjectResult<BidSearch_Result> BidSearch(Nullable<int> bidId, Nullable<int> structTypeId, Nullable<int> siteId, Nullable<int> bidStatusId, Nullable<int> jobTypeId)
        {
            var bidIdParameter = bidId.HasValue ?
                new ObjectParameter("BidId", bidId) :
                new ObjectParameter("BidId", typeof(int));
    
            var structTypeIdParameter = structTypeId.HasValue ?
                new ObjectParameter("StructTypeId", structTypeId) :
                new ObjectParameter("StructTypeId", typeof(int));
    
            var siteIdParameter = siteId.HasValue ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(int));
    
            var bidStatusIdParameter = bidStatusId.HasValue ?
                new ObjectParameter("BidStatusId", bidStatusId) :
                new ObjectParameter("BidStatusId", typeof(int));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BidSearch_Result>("BidSearch", bidIdParameter, structTypeIdParameter, siteIdParameter, bidStatusIdParameter, jobTypeIdParameter);
        }
    }
}
