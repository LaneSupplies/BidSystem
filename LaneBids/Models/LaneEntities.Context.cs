//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LaneBids.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LaneEntities : DbContext
    {
        public LaneEntities()
            : base("name=LaneEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Activity_Log> Activity_Log { get; set; }
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<Bid_Canopies> Bid_Canopies { get; set; }
        public virtual DbSet<Bid_Notes> Bid_Notes { get; set; }
        public virtual DbSet<Bid_Statuses> Bid_Statuses { get; set; }
        public virtual DbSet<Bid_Types> Bid_Types { get; set; }
        public virtual DbSet<Bid> Bids { get; set; }
        public virtual DbSet<Canopy> Canopies { get; set; }
        public virtual DbSet<Color> Colors { get; set; }
        public virtual DbSet<Column_Spacing_Lengths> Column_Spacing_Lengths { get; set; }
        public virtual DbSet<Column_Spacing_Widths> Column_Spacing_Widths { get; set; }
        public virtual DbSet<Column_Types> Column_Types { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Contact_Text> Contact_Text { get; set; }
        public virtual DbSet<Contact_Types> Contact_Types { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Customer_Contact> Customer_Contact { get; set; }
        public virtual DbSet<Deck_Styles> Deck_Styles { get; set; }
        public virtual DbSet<Deck_Types> Deck_Types { get; set; }
        public virtual DbSet<Drainage_Types> Drainage_Types { get; set; }
        public virtual DbSet<Fascia_Types> Fascia_Types { get; set; }
        public virtual DbSet<Fraction> Fractions { get; set; }
        public virtual DbSet<Image> Images { get; set; }
        public virtual DbSet<Job_Types> Job_Types { get; set; }
        public virtual DbSet<Measurement> Measurements { get; set; }
        public virtual DbSet<Sales_Persons> Sales_Persons { get; set; }
        public virtual DbSet<Scope_Types> Scope_Types { get; set; }
        public virtual DbSet<Shipping_Info> Shipping_Info { get; set; }
        public virtual DbSet<Site> Sites { get; set; }
        public virtual DbSet<Structure_Types> Structure_Types { get; set; }
        public virtual DbSet<UserLoginProfile> UserLoginProfiles1 { get; set; }
        public virtual DbSet<Log> Logs { get; set; }
    
        public virtual ObjectResult<BidSearch_Result> BidSearch(Nullable<System.Guid> bidId, Nullable<int> structTypeId, Nullable<System.Guid> siteId, Nullable<int> bidStatusId, Nullable<int> jobTypeId)
        {
            var bidIdParameter = bidId.HasValue ?
                new ObjectParameter("BidId", bidId) :
                new ObjectParameter("BidId", typeof(System.Guid));
    
            var structTypeIdParameter = structTypeId.HasValue ?
                new ObjectParameter("StructTypeId", structTypeId) :
                new ObjectParameter("StructTypeId", typeof(int));
    
            var siteIdParameter = siteId.HasValue ?
                new ObjectParameter("SiteId", siteId) :
                new ObjectParameter("SiteId", typeof(System.Guid));
    
            var bidStatusIdParameter = bidStatusId.HasValue ?
                new ObjectParameter("BidStatusId", bidStatusId) :
                new ObjectParameter("BidStatusId", typeof(int));
    
            var jobTypeIdParameter = jobTypeId.HasValue ?
                new ObjectParameter("JobTypeId", jobTypeId) :
                new ObjectParameter("JobTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BidSearch_Result>("BidSearch", bidIdParameter, structTypeIdParameter, siteIdParameter, bidStatusIdParameter, jobTypeIdParameter);
        }
    }
}
